
#server_name_in_redirect off;
 
location / {
 expires 1d;
 # Note that nginx does not use .htaccess.
 # This will allow for SEF URL’s
 try_files $uri $uri/ /index.php?$args;
}
 
#################################################################
# Optimizations                                                 #
#################################################################
 
 
#################################################################
# Hardening                                                     #
#################################################################
 
server_tokens off; 
# File uploads
client_max_body_size 10M;
client_body_buffer_size 128k;
 
# deny running scripts inside writable directories
location ~* /(images|cache|media|logs|tmp)/.*\.(php|pl|py|jsp|asp|sh|cgi)$ {
  return 403;
  error_page 403 /403_error.html;
}
 
# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
location ~ /\. {
  deny all;
  access_log off;
  log_not_found off;
}

 # # Caching                                                       #
 location ~* \.(ico|pdf|flv)$ {
   access_log off;
   expires 1y;
 }
 
 location = /robots.txt {
   allow all;
   log_not_found off;
   access_log off;
 }
 
 # http://code.google.com/speed/page-speed/docs/caching.html#LeverageBrowserCaching
 location ~* \.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js)$ {
   access_log off;
   expires 1y;
   add_header Pragma public;
  add_header Cache-Control "public, must-revalidate, proxy-revalidate";
 }
 #

 
# Only allow these request methods GET|HEAD|POST
# Do not accept DELETE, SEARCH and other methods
#if ($request_method !~ ^(GET|HEAD|POST)$ ) {
#   return 444;
#}
 
#################################################################
# Error                                                         #
#################################################################
error_page  404              /404.html;
location = /404.html {
  root   /usr/share/nginx/html;
}
 
# redirect server error pages to the static page /50x.html
#
error_page   500 502 503 504  /50x.html;
location = /50x.html {
  root   /usr/share/nginx/html;
}
 
#################################################################
# Rewrite                                                       #
#################################################################
 
# Add www to all urls
#if ($host ~* ^([a-z0-9\-]+\.(be|fr|nl|de))$) {
#  rewrite ^(.*)$ http://www.$host$1 permanent;
#}
 
proxy_cache_key "$host$request_uri$cookie_sessioncookie";

# Stop deep linking or hot linking
# apply this rule on any location that’s an image using Regexp
# block empty blocked or whiteliste referers
# test proper operation using http://altlab.com/hotlinkchecker.php
location ~* \.(png|gif|jpg|jpeg|swf|ico)(\?[0-9]+)?$ {
  valid_referers none blocked example.com www.example.com ~\.google\. ~\.yahoo\. ~\.bing\. ~\.facebook\. ~\.fbcdn\.;
  if ($invalid_referer) {
    # return 403;
    rewrite ^/images/(.*)\.(gif|jpg|jpeg|png)$ http://www.example.com/stop.jpg last;
  }
}

### Password Protect /administrator area
#location ~ /administrator/.* {
  # auth_basic  "Restricted";
  # auth_basic_user_file   /var/www/vhosts/example/httpdocs/passwd;
#}

# Block download agents ##
#     if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
#            return 403;
#     }
##

## Block some robots ##
if ($http_user_agent ~* msnbot|scrapbot) {
  return 403;
}

## Block referal spam
## Deny certain Referers ###
if ( $http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) )
{
 # return 404;
 return 403;
}

